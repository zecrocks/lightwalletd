name: CI

on:
  push:
  pull_request:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        go-version: ['>=1.22.2']

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
        id: go

      - name: Build ${{ matrix.go-version }}
        run: |
          make
          make test

      - name: Race conditions test
        run: make race

  docker_build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Ensure the Docker image builds
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  docker_set_env:
    needs: [build]
    if: github.event_name == 'release'
    uses: zcash/.github/.github/workflows/standard-versioning-for-docker.yaml@main

  docker_build_push:
    uses: zcash/.github/.github/workflows/build-and-push-docker-hub.yaml@main
    needs: [build, docker_set_env]
    if: github.event_name == 'release'
    with:
      image_name: ${{ github.event.repository.name }}
      image_tags: ${{ needs.docker_set_env.outputs.tags }}
      dockerfile: ./Dockerfile
      context: .
      build-args: ""
    secrets:
      dockerhub_registry: ${{ secrets.DOCKERHUB_REGISTRY }}
      dockerhub_username: ${{ secrets.DOCKERHUB_USERNAME }}
      dockerhub_password: ${{ secrets.DOCKERHUB_PASSWORD }}
